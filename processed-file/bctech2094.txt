web-based dashboard filtered data retrieval records Client Background Client: Leading Estate Firm Industry Type: Estate Services: Land, Infrastructure, Estate, Investment Organization Size: 100+ Project Description client’s raw database needed converted dynamic web application modern features user management subscription users explore records wish. Solution Created web application client needs. Added user functionality handle signup/logins added authorization middlewares protect routes unwanted access. Transformed raw data meaningful NoSQL-based database proper schema served instance service named ‘ MongoDB Atlas ‘. Project Deliverables Pushed code required GitHub repository. Tools – Vanilla javascript – Javascript Frameworks ( Nodejs, express , cors ) – Postman Language/techniques – JavsScript – Backend Service setup ( express, cors , js ) – Fronted logic setup ( HTML , CSS , JavaScript , Jquery ) Models Backend: API service created handle records database queries made users. Frontend: frontend client web application users signup access records. Skills JavaScript Programming, APIs, JavaScript Frameworks ( NodeJS, Express , cors ) , Web Design, NoSQL querying MongoDB. Databases MongoDB (NoSQL) Web Servers MongoDB Atlas technical Challenges Faced Project Execution – UI component creation – User authorization middleware creation – Querying data NoSQL Technical Challenges Solved – Created extended UI components handle filters owners, date fields, area ranges records. – API Frontend separately built easier team management tasks. – cloud-based MongoDB instance provided support teams work problems accessibility. Business Impact – Created platform clients’ business. – Transformed raw data meaningful business applications. Previous article Integration video-conferencing data existing web app article Integration product cloud-based CRM platform Ajay Bidyarthy RELATED ARTICLES AUTHOR Efficient Supply Chain Assessment: Overcoming Technical Hurdles Web Application Development Streamlined Integration: Interactive Brokers API Python Desktop Trading Application Efficient Data Integration User-Friendly Interface Development: Navigating Challenges Web Application Deployment